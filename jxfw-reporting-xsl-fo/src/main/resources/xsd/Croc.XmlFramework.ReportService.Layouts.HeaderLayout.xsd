<?xml version="1.0" encoding="windows-1251" ?> 
<xs:schema 
    targetNamespace="http://www.croc.ru/Schemas/XmlFramework/ReportService" 
    xmlns="http://www.croc.ru/Schemas/XmlFramework/ReportService" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    elementFormDefault="qualified"
    attributeFormDefault="qualified">

    <xs:include schemaLocation="Croc.XmlFramework.ReportService.Types.xsd">
        <xs:annotation>
            <xs:documentation>Стандартные типы, используемые в ReportService</xs:documentation>
        </xs:annotation>
    </xs:include>

    <xs:complexType name="fragment">
        <xs:annotation><xs:documentation>Фрагмент заголовка или подзаголовка отчета</xs:documentation></xs:annotation>
        <xs:sequence>
            <xs:element name="formatters" type="formatters" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>        
        <xs:attribute 
            name="value" 
            type="xs:string" 
            use="required" 
            form="qualified">
            <xs:annotation><xs:documentation>Значение (строка) фрагмента заголовка</xs:documentation></xs:annotation>
        </xs:attribute>
        <xs:attribute 
            name="hide-if" 
            type="parsed-string" 
            use="optional" 
            form="qualified">
            <xs:annotation>
                <xs:documentation><![CDATA[
                    C#-выражение, возвращающее TRUE/FALSE.
                    В случае TRUE, фрагмент не выводится.
                ]]></xs:documentation>
            </xs:annotation>
        </xs:attribute>    
        <xs:attribute 
                name="encoding" 
                type="encoding-type"
                use="optional"
                form="qualified">
                <xs:annotation>
                    <xs:documentation>Признак кодировки</xs:documentation>
                </xs:annotation>                
        </xs:attribute>            
    </xs:complexType>
    
    <xs:element name="header-layout" substitutionGroup="abstract-layout">
        <xs:annotation>
            <xs:documentation><![CDATA[
Компонент формирования заголовка отчета. Поддерживает следующую функциональность:
1. Возможность построчного формирования заголовка в виде подзаголовков 
2. Возможность контекстной подстановки в заголовок данных из параметров отчета
3. Возможность контекстной подстановки в подзаголовки данных из подключаемых источников данных
4. Возможность подключения к обработке и форматированию данных каждого подзаголовка форматтеров
            ]]></xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="abstract-layout">
                    <xs:sequence>
                        <xs:element 
                            name="fragment" 
                            type="fragment" 
                            minOccurs="0" 
                            maxOccurs="unbounded">
                            <xs:annotation><xs:documentation>Фрагменты заголовка, выводимые и обрабатываемые последовательно</xs:documentation></xs:annotation>
                        </xs:element>
                        <xs:element
                            name="sub-header"
                            minOccurs="0"
                            maxOccurs="unbounded">
                            <xs:annotation><xs:documentation>Подзаголовки</xs:documentation></xs:annotation>
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element 
                                        name="fragment" 
                                        type="fragment" 
                                        minOccurs="0" 
                                        maxOccurs="unbounded">
                                        <xs:annotation><xs:documentation>Фрагменты под-заголовка, выводимые и обрабатываемые последовательно</xs:documentation></xs:annotation>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute ref="t" use="optional"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
</xs:schema>
